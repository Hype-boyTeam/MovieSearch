services:
  app:
    build: .
    profiles: ["release"]
    restart: always
    networks:
      - web
      - backend
    depends_on:
      - elastic_release
      - postgres_release
    volumes:
      - ./appsettings.json:/app/appsettings.json/:ro

  elastic_release:
    build:
      context: .
      dockerfile: docker/ElasticNori.dockerfile
    restart: always
    profiles: ["release"]
    environment:
      ES_JAVA_OPTS: "-Xms256m -Xmx1024m"
      discovery.type: single-node
      xpack.security.enabled: "false"
    networks:
      - backend
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]

  postgres_release:
    image: postgres:15
    restart: always
    profiles: ["release"]
    networks:
      - backend
    environment:
      # Do NOT use this in production
      POSTGRES_PASSWORD: password_testonly
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elastic_dev:
    build:
      context: .
      dockerfile: docker/ElasticNori.dockerfile
    restart: on-failure
    profiles: ["dev"]
    environment:
      ES_JAVA_OPTS: "-Xms256m -Xmx1024m"
      discovery.type: single-node
      xpack.security.enabled: "false"
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]

  postgres_dev:
    image: postgres:15
    profiles: ["dev"]
    environment:
      # Do NOT use this in production
      POSTGRES_USER: moviesearch
      POSTGRES_PASSWORD: password_testonly
      POSTGRES_DB: moviesearch
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  backend:
  web:
    external: true

volumes:
  postgres_data:
  es_data:
